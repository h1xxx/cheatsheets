stdin
=====

# read lines from the stdin
input := bufio.NewScanner(os.Stdin)
for input.Scan() {
fmt.Println(input.Text())
}

# press any key to continue
fmt.Println("press any key to continue...")
var b []byte = make([]byte, 1)
os.Stdin.Read(b)



text file
=========

# read lines from a file in a stream
f, err := os.Open(arg)
if err != nil {
	fmt.Fprintf(os.Stderr, "ERROR: %v\n", err)
	continue
}
input := bufio.NewScanner(f)
for input.Scan() {
	fmt.Println(input.Text())
}
f.Close()

# read lines from a file in a stream (fast)
fd, err := os.Open(arg)
rd := bufio.NewReaderSize(fd, 32)
for {
	lineBin, notLoadedFully, err := rd.ReadLine()
	if err != nil {
		if err == io.EOF {
			break
		}
		log.Fatalf("read file line error: %v", err)
		return
	}
	fmt.Println(string(lineBin))
}

# read whole file to a string
b, err := os.ReadFile("file.txt")
str := string(b)

# increase buffer to read long lines
scanner := bufio.NewScanner(fd)
buf := make([]byte, 0, 64*1024)
scanner.Buffer(buf, 512*1024*1024)
for scanner.Scan() {
	line := scanner.Text()
}
