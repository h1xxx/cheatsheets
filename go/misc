misc
====

# create all permutations of a slice
func permutations(arr []int)[][]int{
    var helper func([]int, int)
    res := [][]int{}

    helper = func(arr []int, n int){
        if n == 1{
            tmp := make([]int, len(arr))
            copy(tmp, arr)
            res = append(res, tmp)
        } else {
            for i := 0; i < n; i++{
                helper(arr, n - 1)
                if n % 2 == 1{
                    tmp := arr[i]
                    arr[i] = arr[n - 1]
                    arr[n - 1] = tmp
                } else {
                    tmp := arr[0]
                    arr[0] = arr[n - 1]
                    arr[n - 1] = tmp
                }
            }
        }
    }
    helper(arr, len(arr))
    return res
}

# check if email is valid
func emailIsValid(email string) bool {
	_, err := mail.ParseAddress(email)
	return err == nil
}

# check if a program prints to tty or a file (isatty system call)
import "golang.org/x/term"
if term.IsTerminal(int(os.Stdout.Fd())) {
    fmt.Println("\033[1;34mHello World!\033[0m")
} else {
    fmt.Println("Hello World")
}
---
import "golang.org/x/sys/unix"
_, err := unix.IoctlGetWinsize(int(os.Stdout.Fd()), unix.TIOCGWINSZ)
if err != nil {
    fmt.Println("Hello World")
} else {
    fmt.Println("\033[1;34mHello World!\033[0m")
}

