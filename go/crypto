random
======

# generate a random number between 0 and 15 (not secure)
import ("math/rand", "time")
rand.Seed(time.Now().UnixNano())
rand.Intn(16)

# shuffle a slice
rand.Shuffle(len(slice), func(i, j int) {
        slice[i], slice[j] = slice[j], slice[i]
})
---
import (
	"fmt"
	"math/rand"
	"time"
)
func shuffle(src []string) []string {
	res := make([]string, len(src))
	rand.Seed(time.Now().UTC().UnixNano())
	perm := rand.Perm(len(src))
	for i, v := range perm {
		res[v] = src[i]
	}
	return res
}

# calculate md5 hash or sha1
import ("crypto/md5")
hash := md5.Sum([]byte(str))
fmt.Printf("MD5 as byte array: %x\n", hash)
---
hasher := md5.New()
hasher.Write([]byte(str))
hexString := hex.EncodeToString(hasher.Sum(nil))
fmt.Println("MD5 as hex string:", hexString)

