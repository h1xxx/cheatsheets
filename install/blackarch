# from existing arch install
# ==========================

echo blackarch-base > /etc/hostname

curl -O https://blackarch.org/strap.sh
echo 8bfe5a569ba7d3b055077a4e5ceada94119cccef strap.sh | sha1sum -c
sh strap.sh

cat <<EOF >> /etc/pacman.conf

[multilib]
Include = /etc/pacman.d/mirrorlist
EOF

pacman -Syu
pacman -Fy

# common cli tools
p=''
p+='man zip unzip unrar pigz pixz pbzip2 lrzip fuseiso cdrtools tmux w3m '
p+='android-tools strace dos2unix fdupes whois fping speedtest-cli traceroute '
p+='openvpn wireguard-tools avahi nss-mdns macchanger nfs-utils nmap '
p+='smbclient samba xmlstarlet php enca uchardet man-pages proxychains '
p+='wireshark-cli scapy python-scapy-http python-pip bpython go expect '
p+='lftp wol imagemagick net-snmp mariadb remmina jadx '
p+='geoip geoip-database geoip-database-extra '
p+='dmidecode testdisk '

pacman -S ${p}

usermod -a -G adbusers x
usermod -a -G wireshark x

# gui tools
p=''
p+='wireshark-qt tigervnc feh zathura zathura-pdf-poppler gimp '

pacman -S ${p}

pacman --noconfirm -Sc

cat <<EOF > /usr/bin/sqlmap
#!/bin/sh
/usr/bin/python /opt/sqlmap/sqlmap.py "\${@}"
EOF

sed -i  's|^#quiet_mode$|quiet_mode|g' /etc/proxychains.conf
sed -i  's|^socks4|#socks4|g' /etc/proxychains.conf
echo 'http    127.0.0.1 8080' >> /etc/proxychains.conf


# ctf - from blackarch-base
# =========================

# hacking tools
p=''
p+='responder dns2geoip geoedge metasploit postgresql mimikatz exploitdb '
p+='greenbone-security-assistant openvas sqlninja sqlmap wpscan peass linenum '
p+='onesixtyone snmpwalk gobuster ffuf ffuf-scripts seclists dirb dirbuster-ng '
p+='eyewitness tesseract-data-eng whatweb hydra cewl mitmproxy zaproxy sslsplit '
p+='cupp rsmangler mentalist fq gospider jaeles metabigor nikto '
p+='wapiti python-socksio xsspy vuls npm detect-secrets whispers mongodb '
p+='restler-fuzzer gittools xsstrike xsser xxeinjector fimap fierce '
p+='extra/perl-lwp-protocol-https python-shodan smbmap crackmapexec '
p+='enum4linux-ng libnfs dnsenum dnsrecon braa ssh-audit rdp-sec-check '
p+='evil-winrm apkleaks apkstat dex2jar android-apktool jd-cli maven mercurial '
p+='aquatone droopescan joomlascan juumla '
p+='python2-beautifulsoup4 python2-urllib3 python2-certifi python2-requests '
p+='python2-lxml '
p+='python-beautifulsoup4 '
p+=' '
p+=' '

pacman -S ${p}

pacman --noconfirm -Sc
usermod -a -G postgres x

su - postgres -c 'initdb -D /var/lib/postgres/data'

systemctl status postgresql
systemctl enable postgresql

# MANUAL STEP! enter password:
su - postgres -c 'createuser msf -P -S -R -D'

su - postgres -c 'createdb -O msf msf'

cat <<EOF > /home/x/.msf4/database.yml
production:
   adapter: postgresql
   database: msf
   username: msf
   password: 'ffL_msf.3..:::'
   host: 127.0.0.1
   port: 5432
   pool: 75
   timeout: 5
EOF
chown x:x /home/x/.msf4/database.yml

mkdir -p /home/x/.mitmproxy
cat <<EOF > /home/x/.mitmproxy/config.yaml
listen_host: 127.0.0.1
listen_port: 8080
console_mouse: false
console_palette: lowdark
view_order: time
EOF

cat <<EOF > /usr/bin/cupp
#!/bin/sh
/usr/bin/python /usr/share/cupp/cupp.py "\${@}"
EOF

pip install python-owasp-zap-v2.4
pip install PyJWT

## mongodb manual steps as user
git clone https://aur.archlinux.org/mongodb-bin.git
git clone https://aur.archlinux.org/mongosh-bin.git
cd mongodb-bin && makepkg && ..
cd mongosh-bin && makepkg && ..
# as root
cd /home/x/
pacman -U mongodb-bin/mongodb*.tar.zst
pacman -U mongosh-bin/mongosh*.tar.zst

# for a wordpress exploit php/webapps/47361.pl
su - x
perl -MCPAN -e shell
cpan[1]> install WWW::UserAgent::Random


# install android emulator
git clone https://aur.archlinux.org/android-emulator.git
cd android-eumlator
makepkg
su - root
pacman -U *.zst

https://aur.archlinux.org/android-sdk-cmdline-tools-latest.git
cd android-sdk-cmdline-tools-latest
makepkg
su - root
pacman -U *.zst

cat <<EOF > /usr/bin/commix
#!/bin/sh
/usr/bin/python /usr/share/commix/commix.py "\${@}"
EOF

git clone https://github.com/drego85/JoomlaScan /opt/joomlascan-git
git clone https://github.com/ajnik/joomla-bruteforce /opt/joomla-bruteforce-git

# misc
# ====

# To list all of the available tools, run
sudo pacman -Sgg | grep blackarch | cut -d' ' -f2 | sort -u

# To install all of the tools, run
sudo pacman -S blackarch

# To install a category of tools, run
sudo pacman -S blackarch-<category>

# To see the blackarch categories, run
sudo pacman -Sg | grep blackarch

# Note - it maybe be necessary to overwrite certain packages when installing
# blackarch tools. If you experience "failed to commit transaction" errors,
# use the --needed and --overwrite switches. For example:
$ sudo pacman -Syyu --needed blackarch --overwrite='*'

