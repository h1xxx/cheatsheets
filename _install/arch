# host
# ====
qemu-img create -f raw arch.img 64G


# in tty
# ======

# type blindly in qemu ncurses display
<tab><space>nomodeset<enter>

dhcpcd
ssh-keygen -A
echo 'PermitRootLogin yes' >> /etc/ssh/sshd_config
/sbin/sshd
passwd

ssh -o 'StrictHostKeyChecking no' -o  'UserKnownHostsFile /dev/null' -p 10122 root@localhost


# after ssh - BIOS + syslinux
# ===========================

disk='/dev/vda'

sgdisk --zap-all ${disk}
sgdisk --clear ${disk}
sgdisk -g ${disk}
sgdisk --new 1:+2M:+256M --typecode=1:ef02 ${disk}

sgdisk --attributes 1:set:2 ${disk}
sgdisk --new 2::-0 --typecode=2:8300 ${disk}

mkfs.ext4 -F ${disk}1
mkfs.ext4 -F ${disk}2
resize2fs -s ${disk}1
dd bs=440 count=1 conv=notrunc if=/usr/lib/syslinux/bios/gptmbr.bin of=${disk}

mount ${disk}2 /mnt/
mkdir /mnt/boot /mnt/shared
mount ${disk}1 /mnt/boot

pacman-key --init
pacman-key --populate archlinux

genfstab -U /mnt > /mnt/etc/fstab
echo 'host0 /mnt/shared 9p trans=virtio,version=9p2000.L,_netdev 0 0' >> /mnt/etc/fstab                                                                            
pacstrap /mnt base base-devel

arch-chroot /mnt


# after ssh - EFI with grub
# =========================

disk='/dev/vda'

sgdisk --zap-all ${disk}
sgdisk --clear ${disk}
sgdisk -g ${disk}
sgdisk --new 1::+1024M --typecode=1:ef00 ${disk}
sgdisk --new 2::-0 --typecode=2:8300 ${disk}

mkfs.fat -F 32 ${disk}1
mkfs.ext4 -F ${disk}2

mount ${disk}2 /mnt/
mkdir /mnt/boot /mnt/shared
mount ${disk}1 /mnt/boot

pacman-key --init
pacman-key --populate archlinux

genfstab -U /mnt > /mnt/etc/fstab
pacstrap /mnt base base-devel

arch-chroot /mnt



# commands in chroot
# ==================

ln -sf /usr/share/zoneinfo/Europe/Warsaw /etc/localtime
hwclock --systohc

mkdir -p /etc/conf.d
echo keymap=pl > /etc/conf.d/keymaps
echo KEYMAP=pl > /etc/vconsole.conf

printf '%s\n%s\n' 'en_US.UTF-8 UTF-8' 'pl_PL.UTF-8 UTF-8' > /etc/locale.gen
locale-gen

echo arch > /etc/hostname
cat <<EOF > /etc/hosts
127.0.0.1        localhost local
::1              localhost local
EOF

pacman --noconfirm -Sy
pacman --noconfirm -S linux linux-lts openssh
pacman --noconfirm -S vim wget git dhcpcd usbutils lsof chrony bind-tools



# bootloader - syslinux
# =====================

pacman --noconfirm -S syslinux

mkdir -p /boot/syslinux
extlinux --install /boot/syslinux

cat <<EOF > /boot/syslinux/syslinux.cfg
PROMPT 0
DEFAULT arch-lts
TIMEOUT 10

LABEL arch-lts
MENU LABEL Arch Linux LTS
LINUX ../vmlinuz-linux-lts
APPEND root=${disk}2 rw net.ifnames=0 nomodeset quiet
INITRD ../initramfs-linux-lts.img

LABEL arch
MENU LABEL Arch Linux
LINUX ../vmlinuz-linux
APPEND root=${disk}2 rw net.ifnames=0 nomodeset quiet
INITRD ../initramfs-linux.img

LABEL arch-fallback
MENU LABEL Arch Linux fallback
LINUX ../vmlinuz-linux-lts
APPEND root=${disk}2 rw net.ifnames=0 nomodeset quiet
INITRD ../initramfs-linux.img
EOF



# bootloader - grub
# =====================

pacman --noconfirm -S grub efibootmgr
grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=GRUB
grub-mkconfig -o /boot/grub/grub.cfg



# continue install
# =================

# install cli pkgs
p=
p+=' dos2unix openvpn avahi debootstrap parted debian-archive-keyring'
p+=' vim libpciaccess i7z traceroute nss-mdns debian-ports-archive-keyring'
p+=' iperf3 sqlite man-pages nfs-utils'
p+=' busybox bc lxc cpio zip unzip unrar p7zip rsync p7zip imagemagick'
p+=' strace arp-scan mtr iputils inetutils fping tcpdump dmidecode'
p+=' termshark vlock gptfdisk dosfstools cronie mtools tmux'
p+=' sysstat iotop efivar efitools efibootmgr checksec acpi'
p+=' iw wpa_supplicant hostapd wireguard-tools nmap'
p+=' socat wol smartmontools hdparm flashrom vifm ncdu'
p+=' transmission-cli geoip geoip-database android-tools ipython'
p+=' dnsmasq'
p+=' iftop irssi lftp macchanger man w3m'
p+=' nethogs siege speedtest-cli tor geoip-database-extra'
p+=' vnstat whois  fdupes hplip lshw powertop pigz pixz hwinfo'
p+=' sl stress testdisk asciidoc ebook-tools xmlto'
p+=' smbclient samba xmlstarlet uchardet man-pages proxychains mutt'
p+=' python-pip bpython expect vi'
p+=' arch-wiki-docs mlocate atftp figlet uchardet'
p+=' fbset tlp gdisk cdrtools rtorrent links rsync cowsay elinks rclone'
p+=' yt-dlp sc'
p+=' asciinema weechat hunspell-en_us hunspell-pl'
p+=' gpsd docker jq'
p+=' vim-spell-pl ansible ansible-lint tree nnn'
p+=' ranger'
p+=' arch-install-scripts'

pacman --noconfirm -S ${p}
yes | pacman -Scc

echo 'PermitRootLogin yes' >> /etc/ssh/sshd_config
systemctl enable dhcpcd

useradd -m -p '' x
usermod -a -G disk x
usermod -a -G lp x
usermod -a -G audio x
usermod -a -G input x
usermod -a -G video x
usermod -a -G tty x
usermod -a -G users x
usermod -a -G network x
usermod -a -G power x


# !!! manual step
key='ssh-ed25519 aaa comment1'
install -o root -g root -m 0700 -d /root/.ssh
echo "${key}" > /root/.ssh/authorized_keys

mkdir -p /root/.ssh /home/x/.ssh
echo "ssh-ed25519 ${key}" > /home/x/.ssh/authorized_keys
chmod 700 /root/.ssh/ /home/x/.ssh/
chmod 600 /root/.ssh/authorized_keys /home/x/.ssh/authorized_keys
chown -R x:x /home/x/
rm -f /etc/ssh/ssh_host_dsa_key* /etc/ssh/ssh_host_ecdsa_key*
ssh-keygen -t ed25519 -f /etc/ssh/ssh_host_ed25519_key

# !!! (optional) manual step
echo 'ssh-ed25519 <key>' > /etc/ssh/ssh_host_ed25519_key.pub
cat <<EOF > /etc/ssh/ssh_host_ed25519_key
-----BEGIN OPENSSH PRIVATE KEY-----
<...>
-----END OPENSSH PRIVATE KEY-----
EOF
chmod 600 /etc/ssh/ssh_host_ed25519_key

ssh-keygen -t ed25519

systemctl enable sshd
systemctl enable chronyd
systemctl enable dhcpcd

passwd
passwd x

# install cli pkgs
p=
p+=' archlinux-tools linux-tools multilib-devel dos2unix openvpn avahi sqlmap'
p+=' vim libpciaccess clang llvm ninja go rust i7z traceroute nss-mdns wpscan'
p+=' dotnet-runtime iperf3 postgresql sqlite meson man-pages nfs-utils zaproxy'
p+=' busybox bc lxc cpio zip unzip unrar p7zip rsync p7zip imagemagick fq npm'
p+=' cmake strace arp-scan mtr iputils inetutils fping tcpdump dmidecode nikto'
p+=' termshark vlock gptfdisk dosfstools cronie mtools tmux metasploit libnfs'
p+=' sysstat iotop efivar efitools efibootmgr checksec acpi exploitdb sslsplit'
p+=' syslog-ng iw wpa_supplicant hostapd wireguard-tools nmap ttf-dejavu maven'
p+=' socat wol smartmontools hdparm flashrom task vifm ncdu python-socksio ghc'
p+=' transmission-cli geoip geoip-database android-tools python-shodan ipython'
p+=' acme aircrack-ng dnsmasq fetchmail httpie distcc ccache ssh-audit gcc-ada'
p+=' iftop iodine irssi lftp lorcon macchanger man w3m net-snmp mariadb jadx'
p+=' mitmproxy mktorrent nethogs siege speedtest-cli tor geoip-database-extra'
p+=' vnstat whois  fdupes hplip lshw powertop pigz pixz mercurial stack hwinfo'
p+=' sl stress testdisk asciidoc ebook-tools xmlto w3m python-beautifulsoup4'
p+=' smbclient samba xmlstarlet php enca uchardet man-pages proxychains mutt'
p+=' scapy python-scapy python-pip bpython expect python-lxml shellcheck vi'
p+=' tesseract tesseract-data-eng jdk-openjdk jdk11-openjdk jdk17-openjdk ovmf'
p+=' arch-wiki-docs cabal-install cdrkit fuseiso mlocate atftp figlet uchardet'
p+=' fbset tlp gdisk cdrtools rtorrent msmtp links rsync cowsay elinks rclone'
p+=' perl-text-charwidth subversion python-pandas splint cmus yt-dlp sc cmark'
p+=' john hashcat hashcat-utils subdl ebook-tools latex2html latex2rtf dblatex'
p+=' texlive-most dot2tex graphviz pandoc dialog psutils python-html2text tidy'
p+=' php-tidy asciinema weechat guile hunspell-en_us hunspell-pl tcc fastjar'
p+=' gpsd modemmanager firejail python-pyserial docker iptstate quota-tools jq'
p+=' vim-spell-pl checkbashisms dash ansible ansible-lint iucode-tool tree nnn'
p+=' ranger shellharden units logwatch logrotate tcl chrpath openssl-1.1'
p+=' jre-openjdk jre11-openjdk jre17-openjdk arch-install-scripts calibre'
p+=' dvdbackup dvdauthor mkvtoolnix-cli handbrake-cli squashfs-tools'

pacman --noconfirm -S ${p}
yes | pacman -Scc

exit
sync
poweroff


# config after reboot
# ===================

# proxychains
sed -i  's|^#quiet_mode$|quiet_mode|g' /etc/proxychains.conf
sed -i  's|^socks4|#socks4|g' /etc/proxychains.conf
echo 'http    127.0.0.1 8080' >> /etc/proxychains.conf

# configure postgres for metasploit
usermod -a -G postgres x
su - postgres -c 'initdb -D /var/lib/postgres/data'
systemctl start postgresql
systemctl enable postgresql

# MANUAL STEP! enter password:
su - postgres -c 'createuser msf -P -S -R -D'

su - postgres -c 'createdb -O msf msf'

su - x

mkdir -p /home/x/.msf4
cat <<EOF > /home/x/.msf4/database.yml
production:
   adapter: postgresql
   database: msf
   username: msf
   password: 'ffL_msf.3..:::'
   host: 127.0.0.1
   port: 5432
   pool: 75
   timeout: 5
EOF
chown x:x /home/x/.msf4/database.yml

# mitmproxy
mkdir -p /home/x/.mitmproxy
cat <<EOF > /home/x/.mitmproxy/config.yaml
listen_host: 127.0.0.1
listen_port: 8080
console_mouse: false
console_palette: lowdark
view_order: time
EOF

# zap
pip install python-owasp-zap-v2.4
pip install PyJWT

# mongodb manual steps as a user
git clone https://aur.archlinux.org/mongosh-bin.git
cd mongosh-bin && makepkg
exit
pacman -U /home/x/mongosh-bin/mongosh*.tar.zst
su - x

git clone https://aur.archlinux.org/mongodb-bin.git
cd mongodb-bin && makepkg
exit
pacman -U /home/x/mongodb-bin/mongodb*.tar.zst
su - x

git clone https://aur.archlinux.org/wayback_machine_downloader.git
cd wayback_machine_downloader
makepkg
exit 
pacman -U /home/x/wayback_machine_downloader/wayback_machine_downloader*.tar.zst
su - x

# for a wordpress exploit php/webapps/47361.pl
perl -MCPAN -e shell
cpan[1]> install WWW::UserAgent::Random

# dotfiles
mkdir -p ~/.vim/colors/
url='https://raw.githubusercontent.com/h1xxx/cheatsheets/master/_dot'
wget ${url}/.bashrc -O ~/.bashrc
cp /etc/skel/.bash_profile ~/
wget ${url}/.tmux.conf -O ~/.tmux.conf
wget ${url}/.vimrc -O ~/.vimrc
col_scheme_path='.vim/colors/industry-vintage.vim'
wget ${url}/${col_scheme_path} -O ${col_scheme_path}

exit
# repeat the previous step

cat /dev/zero >> /root/zeros.bin 2>&1 ||:; sync; rm /root/zeros.bin && sync
poweroff


# gui programs
# ============

echo arch-gui > /etc/hostname
sed -i 's| nomodeset||g' /boot/syslinux/syslinux.cfg

# add ungoogled-chromium repo
url='https://download.opensuse.org/repositories/home:/ungoogled_chromium/Arch/x86_64/home_ungoogled_chromium_Arch.key'
curl -s ${url} | sudo pacman-key -a -
cat <<EOF >> /etc/pacman.conf

[home_ungoogled_chromium_Arch]
SigLevel = Required TrustAll
Server = https://download.opensuse.org/repositories/home:/ungoogled_chromium/Arch/\$arch
EOF

p=
p+=' xorg-server xorg-xinit xorg-xrandr xorg-xwininfo i3 unclutter openbox'
p+=' alsa-utils alsa-plugins pulseaudio-alsa pulseaudio libpulse pavucontrol'
p+=' qemu-guest-agent spice-vdagent rxvt-unicode rxvt-unicode-terminfo pamixer'
p+=' gimp libreoffice qemu-full spice-gtk3 android-file-transfer electrum' 
p+=' ttf-inconsolata ttf-dejavu ttf-droid ttf-liberation terminus-font picard'
p+=' ttf-font-awesome noto-fonts noto-fonts-extra marble dosbox chromaprint'
p+=' wireshark-qt tigervnc feh zathura zathura-pdf-poppler gimp remmina beets'
p+=' python-pyacoustid netsurf qutebrowser znc dmenu ungoogled-chromium zbar'
p+=' mpv firefox xss-lock ttf-ubuntu-font-family xorg-xfontsel scrot seahorse'
p+=' xorg-mkfontscale'

pacman -Syu
pacman --noconfirm -S ${p}
yes | pacman -Scc

fc-cache -f

mkdir -p '/etc/systemd/system/getty@tty1.service.d'
cat <<EOF >> /etc/systemd/system/getty\@tty1.service.d/autologin.conf
[Service]
ExecStart=
ExecStart=-/sbin/agetty -o '-p -f -- \\\\u' --noclear --autologin x - \$TERM
EOF

cat <<EOF >> /etc/modprobe.d/kms.conf
options bochs modeset=1
options qxl modeset=1
EOF

mkdir -p /etc/modules-load.d
cat <<EOF >> /etc/modules-load.d/xorg.conf
bochs
qxl
snd_seq
EOF

cat <<EOF > /etc/X11/xorg.conf.d/10-keyboard.conf
Section "InputClass"
        Identifier      "system-keyboard"
        MatchIsKeyboard "on"
        Option          "XkbLayout"             "pl,us"
        Option          "GrabDevice"            "False"
EndSection

# enable switching to tty
Section "Serverflags"
        Option "DontVTSwitch" "off"
EndSection
EOF

cat <<EOF > /etc/X11/xorg.conf.d/20-video.conf
Section "Monitor"
        Identifier      "Virtual-1"
        VertRefresh     60
        Modeline        "1920x1080_60.00"  173.00  1920 2048 2248 2576  1080 1083 1088 1120 -hsync +vsync
        Option          "PreferredMode"         "1920x1080_60.00"
EndSection

Section "Screen"
        Identifier "Screen0"
        Device     "Card0"
        Monitor    "Virtual-1"
        SubSection "Display"
                Viewport   0 0
                Depth     24
        EndSubSection
EndSection
EOF

cat > /home/x/.Xresources << EOF
Xft.antialias: 0
Xft.rgba:      rgb
Xft.autohint:  0
Xft.hinting:   1
Xft.hintstyle: hintslight
EOF

su - x
mkdir -p ~/.config/i3{,status}
url='https://raw.githubusercontent.com/h1xxx/cheatsheets/master/_dot'
wget ${url}/.config/i3/config -O ~/.config/i3/config
wget ${url}/.config/i3status/config.xorg_vm -O ~/.config/i3status/config
wget ${url}/.Xdefaults -O ~/.Xdefaults

git clone https://aur.archlinux.org/skypeforlinux-stable-bin.git
cd skypeforlinux-stable-bin
makepkg
exit
cd /home/x/skypeforlinux-stable-bin/
pacman -U skypeforlinux-stable-bin-*.pkg.tar.zst
rm -r /home/x/skypeforlinux-stable-bin/

# !!! manual step - create a keyring
seahorse


# config after reboot
# ===================

# mostly to get rid of nomodeset for X -configure
reboot

X -configure
mv xorg.conf.new /etc/X11/xorg.conf

echo '. /etc/X11/xinit/xinitrc.d/50-systemd-user.sh' > /home/x/.xinitrc
echo 'exec i3' >> /home/x/.xinitrc
echo '[ -z "${DISPLAY}" ] && [ "$(tty)" = /dev/tty1 ] && startx' >> /home/x/.bash_profile
chown -R x:x /home/x/

# blackarch
# =========

curl -O https://blackarch.org/strap.sh
sh strap.sh
pacman -Sy

useradd -m gvm
usermod -a -G gvm x

p=
p+=' ffuf responder mimikatz exploitdb wpscan peass linenum onesixtyone braa'
p+=' gobuster ffuf-scripts seclists dirb dirbuster-ng whatweb hydra cewl'
p+=' zaproxy sslsplit rsmangler mentalist fq gospider jaeles metabigor nikto'
p+=' wapiti python-socksio vuls detect-secrets whispers xxeinjector fierce'
p+=' restler-fuzzer xsstrike python-shodan smbmap crackmapexec evil-winrm'
p+=' enum4linux-ng libnfs dnsenum dnsrecon braa ssh-audit rdp-sec-check jd-cli'
p+=' dex2jar aquatone droopescan juumla theharvester waybackurls wafw00f'
p+=' sublist3r pnscan openldap snyk nuclei lfimap aws-cli webanalyze ruby2.7'
p+=' gvmd openvas-scanner ospd-openvas perl-xml-twig mosquitto hiredis'
p+=' ltrace recon-ng naabu'

pacman --noconfirm -S ${p}
yes | pacman -Scc

# missing pg extension
wget https://github.com/greenbone/pg-gvm/archive/refs/tags/v22.4.0.tar.gz
tar xf v22.4.0.tar.gz
cd pg-gvm-22.4.0/
cmake . && make && make install
rm -r pg-gvm-22.4.0/ v22.4.0.tar.gz

# configure postgres for openvas
su -l postgres
createuser gvm
createdb -O gvm gvmd
psql gvmd
create role dba with superuser noinherit;
grant dba to gvm;
create extension "uuid-ossp";
create extension "pg-gvm";
\q
exit

# check postgres connection from msf
msfdb status --connection-string=postgresql://postgres@localhost:5432/postgres

# configure redis for openvas
mv /etc/redis/redis-openvas.conf /etc/redis/redis.conf
sed -i 's|^dir .*|dir /var/lib/redis|' /etc/redis/redis.conf
echo 'db_address = /run/redis-openvas/redis.sock' > /etc/openvas/openvas.conf
chmod 770 /var/lib/redis
ln -s libhiredis.so.1.1.0 /usr/lib/libhiredis.so.1.0.0

# configure openvas
mkdir -p /var/lib/notus
ln -s /usr/bin/vendor_perl/xml_split /usr/bin/xml_split
chown gvm:gvm /var/log/gvm
chown -R gvm:gvm /var/lib/openvas
chown -R gvm:gvm /var/lib/notus
su - gvm
greenbone-nvt-sync
openvas --update-vt-info
greenbone-feed-sync --type GVMD_DATA
greenbone-scapdata-sync --rsync
greenbone-certdata-sync --rsync
gvm-manage-certs -a
gvmd --create-user=admin --role=Admin --password=admin
exit

# !!! manual step
visudo
# add line: gvm ALL = NOPASSWD: /usr/bin/openvas

# install gvm-cli
pip install gvm-tools

# start and configure openvas
install -dm 777 /run/gvmd
install -dm 777 /run/redis-openvas
systemctl start redis
systemctl start mosquitto
systemctl start ospd-openvas
systemctl start gvmd
su - gvm
# !!! manual steps
gvmd --get-scanners
gvmd --modify-scanner=__scanner_id__ --scanner-host=/run/gvm/ospd.sock
gvmd --verify-scanner=__scanner_id__
gvmd --get-users --verbose
gvmd --modify-setting 78eceaec-3385-11ea-b237-28d24461215b --value __admin_id__
exit

# vulscan for nmap
git clone https://github.com/scipag/vulscan /opt/vulscan
ln -s /opt/vulscan /usr/share/nmap/scripts/

cat /dev/zero >> /root/zeros.bin 2>&1 ||:; sync; rm /root/zeros.bin && sync
poweroff

